module generate

import org.eclipse.emf.mwe2.ecore.EcoreGenerator
import tools.mdsd.ecoreworkflow.mwe2lib.bean.EclipseRCPSupportingStandaloneSetup
import tools.mdsd.ecoreworkflow.mwe2lib.component.ContextDependentMapping
import tools.mdsd.ecoreworkflow.mwe2lib.component.URISupportingDirectoryCleaner
import tools.mdsd.ecoreworkflow.mwe2lib.component.GapPatternPostProcessor

var workspaceRoot = "../../"

Workflow {
	
	bean = EclipseRCPSupportingStandaloneSetup {
		scanClassPath = true
		platformUri = workspaceRoot
		
		registerGenModelFile = "platform:/resource/tools.mdsd.jamopp.commons.jdt/metamodel/jdt.genmodel"
		registerGenModelFile = "platform:/resource/tools.mdsd.jamopp.commons.layout/metamodel/layout.genmodel"
		
		logResourceUriMap = true
	}
	
	component = EcoreGenerator {
		genModel = "platform:/resource/tools.mdsd.jamopp.commons.jdt/metamodel/jdt.genmodel"
		srcPath = "platform:/resource/tools.mdsd.jamopp.commons.jdt/src-gen"
	}
	
	component = EcoreGenerator {
		genModel = "platform:/resource/tools.mdsd.jamopp.commons.layout/metamodel/layout.genmodel"
		srcPath = "platform:/resource/tools.mdsd.jamopp.commons.layout/src-gen"
		generateEdit = true
	}
	
	component = EcoreGenerator {
		genModel = "platform:/resource/tools.mdsd.jamopp.model.java/metamodel/java.genmodel"
		srcPath = "platform:/resource/tools.mdsd.jamopp.model.java/src-gen"
		generateEdit = true
                generateEditor = true
	}
}
